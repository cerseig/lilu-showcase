<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, shrink-to-fit=no, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Lilu</title>
    <link rel="icon" type="image/png" href="images/favicon.png" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.9.7/jquery.fullpage.min.css">
    <%= stylesheet_link_tag :application %>
  </head>
  <body>
    <%= yield %>

    <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullPage.js/2.9.7/jquery.fullpage.min.js"></script>

    <%= javascript_include_tag :application %>

    <script>
      $(document).ready(function() {

        console.log('test');

        $('#landing__container').fullpage({
          anchors: ['concept', 'how-it-works', 'user-test', 'team', 'application'],
  				navigation: true,
  				navigationPosition: 'right',
  				navigationTooltips: ['Concept', 'How it works', 'User test', 'Team', 'Application'],
          showActiveTooltip: false,
          scrollingSpeed: 1000,

          afterLoad: function(anchorLink, index){
        		var loadedSection = $(this);
            if(index == 1){
              $('.landing__section').text('LI.LU ?');
        		}
            if(index == 2){
              $('.landing__section').text('Comment ça marche ?');
        		}
        		if(index == 3){
              $('.landing__section').text('Testé, approuvé');
        		}
            if(index == 4){
              $('.landing__section').text('Contact');
        		}
            if(index == 5){
              $('.landing__section').text('L\'application');
        		}
        	}
        });

        $('.landing__draw-cta').on('click', function(){
          console.log('test click button');
          $('.landing__example').css('opacity', '0')
          setTimeout(function(){
            $('.landing__example').css('display', 'none')
          }, 500);
        })

        // SETTING ALL VARIABLES
        var isMouseDown = false;
        var canvas = document.querySelector('#canvas')
        var ctx = canvas.getContext("2d")
        canvas.style.width ='100%';
        canvas.style.height='100%';
        canvas.width  = canvas.offsetWidth;
        canvas.height = canvas.offsetHeight;
        var linesArray = [];
        currentSize = 5;
        var currentColor = "rgb(0,0,0)";
        var currentBg = "white";

        // INITIAL LAUNCH
        createCanvas();

        // BUTTON EVENT HANDLERS
        document.getElementById('colorpicker').addEventListener('change', function() {
          currentColor = this.value;
        });
        document.getElementById('saveToImage').addEventListener('click', function() {
          downloadCanvas(this, 'canvas', 'draw-lilu.png');
        }, false);
        document.getElementById('clear').addEventListener('click', createCanvas);

        // REDRAW
        function redraw() {
            for (var i = 1; i < linesArray.length; i++) {
              ctx.beginPath();
              ctx.moveTo(linesArray[i-1].x, linesArray[i-1].y);
              ctx.lineWidth  = linesArray[i].size;
              ctx.lineCap = "round";
              ctx.strokeStyle = linesArray[i].color;
              ctx.lineTo(linesArray[i].x, linesArray[i].y);
              ctx.stroke();
            }
        }

        // DRAWING EVENT HANDLERS
        canvas.addEventListener('mousedown', function() {mousedown(canvas, event);});
        canvas.addEventListener('mousemove',function() {mousemove(canvas, event);});
        canvas.addEventListener('mouseup',mouseup);

        // CREATE CANVAS
        function createCanvas() {
    			ctx.fillStyle = currentBg;
    			ctx.fillRect(0, 0, canvas.width, canvas.height);
    		}

        // DOWNLOAD CANVAS
        function downloadCanvas(link, canvas, filename) {
          link.href = document.getElementById(canvas).toDataURL();
          link.download = filename;
        }

        // GET MOUSE POSITION
        function getMousePos(canvas, evt) {
    			var rect = canvas.getBoundingClientRect();
    			return {
    				x: evt.clientX - rect.left,
    				y: evt.clientY - rect.top
    			};
    		}

        // ON MOUSE DOWN
        function mousedown(canvas, evt) {
          var mousePos = getMousePos(canvas, evt);
          isMouseDown = true
          var currentPosition = getMousePos(canvas, evt);
          ctx.moveTo(currentPosition.x, currentPosition.y)
          ctx.beginPath();
          ctx.lineWidth  = currentSize;
          ctx.lineCap = "round";
          ctx.strokeStyle = currentColor;
        }

        // ON MOUSE MOVE
        function mousemove(canvas, evt) {
          if(isMouseDown){
            var currentPosition = getMousePos(canvas, evt);
            ctx.lineTo(currentPosition.x, currentPosition.y)
            ctx.stroke();
            store(currentPosition.x, currentPosition.y, currentSize, currentColor);
          }
        }

        // STORE DATA
        function store(x, y, s, c) {
          var line = {
            "x": x,
            "y": y,
            "size": s,
            "color": c
          }
          linesArray.push(line);
        }

        // ON MOUSE UP
        function mouseup() {
          isMouseDown=false
          store()
        }

      });

      Application.init();

    </script>


  </body>
</html>
